{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rangel\\\\Desktop\\\\W.D\\\\Learning-Full-Stack\\\\ReactJS\\\\src\\\\components\\\\MiComponente.js\";\n//Acá debemos importar react\nimport React from 'react'; //Importo react y cargo el modulo de node 'react'\n//Ahora defino una clase de javascript\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MiComponente extends React.Component {\n  render() {\n    //El metodo render es el que si encarga de mostrar informacion por pantalla al usuario, es decir, mostrar el js y el HTML al usuario\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  }\n\n} //Ahora puedo exportar mi componente para poder utilizarlo dentro de cualquier otra vista\n\n\nexport default MiComponente; //Voy en app.js e importo mi componente\n//Otra forma de hacer componentes {}\n//import React, {component} from 'react';\n//Si yo pusiera un <h2> abajo del <h1> no funcionaria porque el return solo puede mostrar una etiqueta. Entonces creamos un <React.Fragment>","map":{"version":3,"sources":["C:/Users/Rangel/Desktop/W.D/Learning-Full-Stack/ReactJS/src/components/MiComponente.js"],"names":["React","MiComponente","Component","render"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAA2B;AAE3B;;;;AACA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA0C;AAEtCC,EAAAA,MAAM,GAAE;AAAE;AACN,wBACI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAVqC,C,CAY1C;;;AACA,eAAeF,YAAf,C,CACA;AAEA;AACA;AAEA","sourcesContent":["//Acá debemos importar react\r\nimport React from 'react'; //Importo react y cargo el modulo de node 'react'\r\n\r\n//Ahora defino una clase de javascript\r\nclass MiComponente extends React.Component{\r\n\r\n    render(){ //El metodo render es el que si encarga de mostrar informacion por pantalla al usuario, es decir, mostrar el js y el HTML al usuario\r\n        return(\r\n            <React.Fragment>\r\n\r\n            </React.Fragment>\r\n            \r\n        );\r\n        \r\n    } \r\n}\r\n//Ahora puedo exportar mi componente para poder utilizarlo dentro de cualquier otra vista\r\nexport default MiComponente;\r\n//Voy en app.js e importo mi componente\r\n\r\n//Otra forma de hacer componentes {}\r\n//import React, {component} from 'react';\r\n\r\n//Si yo pusiera un <h2> abajo del <h1> no funcionaria porque el return solo puede mostrar una etiqueta. Entonces creamos un <React.Fragment>"]},"metadata":{},"sourceType":"module"}